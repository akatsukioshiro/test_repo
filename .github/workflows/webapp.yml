name: Jynx - UI Server of Jenkins AI

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:    
  RUN_CQ: ${{ "false" }}

jobs:
  build_jynx:
    name: Build
    #UI chat Server will be get built here.
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      #Checkout the source code from the repository
      uses: actions/checkout@v4

    - name: Setup Python
      #Set up Python environment
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install requirements
      #Install Python dependencies and WebApp
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install .
        python src/jynx_ui/sanity.py

  lint_jynx:
    name: Lint
    #flake8 has been used to test code lint sanity
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      #Checkout the source code from the repository
      uses: actions/checkout@v4

    - name: Setup Python
      #Set up Python environment
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install requirements
      #Install Python dependencies for Flake8
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements_dev.txt

    - name: Code Lint
      run: |
        python -m flake8 src/jynx_ui

  test_jynx:
    name: Test
    needs: build_jynx
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      #Checkout the source code from the repository
      uses: actions/checkout@v4

    - name: Setup Python
      #Set up Python environment
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install requirements
      #Install Python dependencies for pytest, pytest-cov
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements_dev.txt
        python -m pip install -e .

    - name: Run Tests and generate coverage.xml
      run: |
        python -m pytest
      #continue-on-error: true # Continue to next step even if this step fails

    - name: archive coverage results
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage-reports/coverage.xml
        overwrite: true
      if: success() || failure()

    - name: this job ran
      run: echo "true" >> $RUN_CQ
      if: success() || failure()

  codequality_jynx:
    name: CodeQuality
    needs: test_jynx
    if: ${{ ( env.RUN_CQ == "true" }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      #Checkout the source code from the repository
      uses: actions/checkout@v4

    - name: procure coverage results
      uses: actions/download-artifact@v4
      with:
        name: coverage-report
        path: coverage-reports/

    - name: coverage.xml path replace
      run: sed -i 's/src\/jynx_ui\///g' coverage-reports/coverage.xml

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master #this is a github repo
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: src/jynx_ui
        args: >
          -Dsonar.organization=akatsukioshiro
          -Dsonar.projectKey=akatsukioshiro_test_repo
          -Dsonar.python.coverage.reportPaths=coverage-reports/coverage.xml
          -Dsonar.verbose=true
